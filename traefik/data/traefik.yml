api:
  dashboard: true
  insecure: true
  debug: true

entryPoints:
  http:
    address: :80
  https:
    address: :443

providers:
  file:
    filename: /etc/traefik/traefik.yml
    watch: true
  docker:
    endpoint: "unix:///var/run/docker.sock"
    network: proxy
    exposedByDefault: false

certificatesResolvers:
  http:
    acme:
      email: email@sample.yeoyou.net
      storage: /etc/traefik/acme.json
      httpChallenge:
        entryPoint: http

log:
  level: DEBUG
  format: json

http:
  routers:
    insecureDashboard:
      entrypoints:
        - http
      rule: Host(`traefik.{{ env "ACME_DOMAIN" }}`)
      service: noop
      middlewares:
        - redirectToHttps
    dashboard:
      entrypoints:
        - https
      tls:
        certResolver: http
      rule: Host(`traefik.{{ env "ACME_DOMAIN" }}`)
      service: api@internal
      middlewares:
        - auth

    bt:
      entrypoints:
        - https
      tls:
        certResolver: http
      rule: Host(`bt.{{ env "ACME_DOMAIN" }}`)
      service: bt
    bt-insecure:
      entrypoints:
        - http
      rule: Host(`bt.{{ env "ACME_DOMAIN" }}`)
      middlewares:
        - redirectToHttps
      service: bt

  services:
    bt:
      type:
      loadBalancer:
        servers:
        - url: "http://127.0.0.1:9091"

    noop:
      loadBalancer:
        servers:
        - url: "http://never-called"

  middlewares:
    redirectToHttps:
      redirectScheme:
        scheme: https
    auth:
      basicAuth:
        usersFile: /etc/traefik/user.secrets
